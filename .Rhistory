install.packages("questionr", dep = TRUE)
library("questionr")
bd <- hdv2003
data(hdv2003)
bd <- hdv2003
ls()
rm(hdv2003)
ls()
bd
head(bd, 3)
head(bd, 3)
names(bd)
length(bd) #Show number of variables
taild (bd)
tail(bd)
tail(bd, 2)
names(bd) # variable names
tail(bd, 2)
tail(bd) # tail
ncol(bd) # number of observations
nrow(bd) #number of observations
bd # Show data table
dim(bd) # number of dimensions (Columns and rows)
class(bd)
str(bd)
describe(bd)
str(bd) # detailed description of data table structure
source("C:/Users/gabri/OneDrive - HEC MontrÃ©al/Dropbox/memoire-de-maitrise/demo_google-collab/studio_demo_google-colab.R", echo=TRUE)
describe(bd) # detailed description of table variables
rm(hdv2003) # remove object
## IMPORT DATA BASE ##
#Install packagaes
install.packages("questionr", dep = TRUE)
library("questionr")
## MAKE A COPY AND RENAME BASE INTO A NEW OBJECT ##
#Assign data base "hdv2003" to "bd (datatable)
data(hdv2003)
bd <- hdv2003
ls() # Show list of objects
## REMOVING OBJECTS ##
rm(hdv2003) # remove object
rm (aaa,bbb,ccc) #remove more than one object
#Assign data base "hdv2003" to "bd (datatable)
data(hdv2003)
bd <- hdv2003
ls() # Show list of objects
rm(hdv2003) # remove object
ls() # Show list of objects
class(bd) # object type
str(bd) # detailed description of data table structure
describe(bd) # detailed description of table variables
describe(bd) # detailed description of table variables
str(bd) # detailed description of data table structure
describe(bd) # detailed description of table variables
bd[,2]
bd[ ,2]
bd [ ,3:6]
bd[ ,-2] #  all variables but 2nd
bd[ ,2] #  2nd variable
bd[ ,-2] #  all variables but 2nd
bd[ , -c(3,6)] # all variables but 3 AND 6
bd[3:6, ] # select rows 3 to 6
bd[1:100, c(1:5,10)] # observations 1 to 100, variables 1 to 5 and 10
bd2 <- bd[1:100, c(1:5,10)]
bd2
bd["relig"]
bd [ ,c("occup","relig")]
bd[1:100, c("id", "age", "sexe", "nivetud", "relig")]
bd$sexe
bd$sexe[1:10] # observations 1 to 10 of "sexe" variable
length(bd$sexe)
str(bd$sexe)
head(bd$sexe)
bd$sexe=="femme"
bd$sexe=="Femme"
bd$sece!="Homme"
bd$sexe!="Homme"
# apply condition to create a new data set
bd.f <-bd[bd$sexe=="Femme", ]
# apply condition to create a new data set
bd.f <-bd[bd$sexe=="Femme", ]
bd.m <-bd[bd$sexe=="Homme", ]
bd.f
bd.m
# select multiple variable conditions
bd[bd$occup=="Retraite"| bd$occup=="Au foyer", ] # with operator '|' (or)
#select multiple conditions applied to multiple variables
bd[bd$age >=40 & bd$age <= 60 & (bd$lecture.bd =="Oui" | bd$cinema = 'Oui')]
#select multiple conditions applied to multiple variables
bd[bd$age >=40 & bd$age <= 60 & (bd$lecture.bd =="Oui" | bd$cinema == "Oui")]
#select multiple conditions applied to multiple variables
bd[bd$age >=40 & bd$age <= 60 & (bd$lecture.bd =="Oui" | bd$cinema == "Oui"), ]
bd.cadre<- bd[bd$qualif=="cadre" & bd$age<50, c("id","qualif","age")]
bd.cadre
bd.cadre<- bd[bd$qualif=="Cadre" & bd$age<50, c("id","qualif","age")]
bd.cadre
# try again, including !is.na
bd.cadre2<- bd[bd$qualif=="Cadre" & bd$age<50 & !isna(bd$qualif) & !isna(bd$age), c("id","qualif","age")]
# try again, including !is.na
bd.cadre2<- bd[bd$qualif=="Cadre" & bd$age<50 & !is.na(bd$qualif) & !is.na(bd$age), c("id","qualif","age")]
bd.cadre2
# better to use subset()
bd.cadre3 <- subset(bd, qualif=="Cadre" & age<50, select c(id,qualif, age))
# better to use subset()
bd.cadre3 <- subset(bd, qualif=="Cadre" & age<50, select c(id,qualif,age))
# better to use subset()
bd.cadre3<- subset(bd, qualif=="Cadre" & age<50, select= c(id,qualif,age))
bd.cadre3
# missing values
is.na(bd$age) #identify cases with missing values
which(is.na(bd), arr.ind = TRUE) # identify cases with missing values in whole data set
sum
# is.na() applies logic test
# which() returns rows who meet condition (TRUE)
# arr.ind= applies logic on all columns
# returns a matrix with observation number and column number of NAs
sum(is.na(bd$qualif)) # number of NAs in variable
# is.na() applies logic test
# which() returns rows who meet condition (TRUE)
# arr.ind= applies logic on all columns
# returns a matrix with observation number and column number of NAs
sum(is.na(bd$qualif)) # number of NAs in variable
# is.na() applies logic test
# which() returns rows who meet condition (TRUE)
# arr.ind= applies logic on all columns
# returns a matrix with observation number and column number of NAs
sum(is.na(bd$qualif)) # number of NAs in variable
sum(is.na(bd$qualif)) # number of NAs in variable
sum(!is.na(bd$qualif)) # number of non-NAs in variable
bd.qualif <- bd[complete.cases(bd$qualif, )] # create a new data set without NAs in "qualif" variable
bd.qualif <- bd[complete.cases(bd$qualif), ] # create a new data set without NAs in "qualif" variable
bd.qualif
bd
bd$age[1] # respondant age in data base
bd$age[1} <- 38 # correct value
bd$age[1] <- 38 # correct value
bd&age[1]
bd$age[1]
#option2
bd$relig.rec2 <- factor(bd$relig, levels = c("Pratiquant regulier", "Pratiquant occasionnel", "Appartenance sans pratique", "Ni croyance ni appartenance", "Rejet", "NSP ou NVPR"), labels = c("Pratiquant", "Pratiquant", "Croyant", "Athee", "ND", "ND") )
str(bd$relig.rec.2) #displays new variable - set in "character"
str(bd$relig.rec.2) #displays new variable - set in "character"
#option2
bd$relig.rec2 <- factor(bd$relig, levels = c("Pratiquant regulier", "Pratiquant occasionnel", "Appartenance sans pratique", "Ni croyance ni appartenance", "Rejet", "NSP ou NVPR"), labels = c("Pratiquant", "Pratiquant", "Croyant", "Athee", "ND", "ND") ) # anciens noms, nouveaux noms
str(bd$relig.rec.2) #displays new variable - set in "character"
#option2
bd$relig.rec2 <- factor(bd$relig, levels = c("Pratiquant regulier", "Pratiquant occasionnel", "Appartenance sans pratique", "Ni croyance ni appartenance", "Rejet", "NSP ou NVPR"), labels = c("Pratiquant", "Pratiquant", "Croyant", "Athee", "ND", "ND")) # anciens noms, nouveaux noms
str(bd$relig.rec2) #displays new variable - set in "character"
#option3 - fonction ifelse()
bd$occup
#option3 - fonction ifelse()
str(bd$occup)
levels(bd$occup)
bd$occup.dico <- ifelse(bd$occup=="Exerce une profession", "Actif", "Inactif")
levels(bd$occup.dico)
bd$occup.dico <- ifelse(bd$occup=="Exerce une profession", "Actif", "Inactif")
str(bd$occup)
str(bd$occup.dico)
bd$occup.dico <- as.factor(bd$occup)
levels(bd$occ)
levels(bd$occup.dico)
#option3 - fonction ifelse()
levels(bd$occup) # transform this variable into binary variable
bd$occup.dico <- ifelse(bd$occup=="Exerce une profession", "Actif", "Inactif")
str(bd$occup.dico) # new variable set as character
bd$occup.dico <- as.factor(bd$occup.dico)
levels(bd$occup.dico)
#option2
bd$femme.ret <- ifelse(bd$sexe == "Femme" & bd$occup = "Retraite", "Oui", "Non") # create a variable identifying retired women
#option2
bd$femme.ret <- ifelse(bd$sexe == "Femme" & bd$occup == "Retraite", "Oui", "Non") # create a variable identifying retired women
str(bd$femme.ret)
bd$femme.ret <- as.factor(bd$femme.ret)
str(bd$femme.ret)
bd$age.cat <- cut(bd$age, breaks=c(0, 20, 40, 60, 80, 100), labels=c("20 under", "21 to 40","41 to 60","61 to 80","81 over"), ordered_result = TRUE, )
str(bd$age)
str(bd$age.cat)
bd$annee <- 2003 - bd$age #annee de naissance
str(bd$annee)
bd$sum <- rowSums(bd[ ,c("var1", "var2", "var3")], na.rm = TRUE)
bd$sum <- rowSums (bd[ , c("var1", "var2", "var3")], na.rm = TRUE)
bd$moy <- rowMeans(bd[ , c("var1", "var2", "var3")], na.rm = TRUE)
usethis::usegit()
usethis::use_git()
View(bd)
